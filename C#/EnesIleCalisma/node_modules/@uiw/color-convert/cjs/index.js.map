{
  "version": 3,
  "names": [
    "_utils",
    "require",
    "Object",
    "keys",
    "forEach",
    "key",
    "prototype",
    "hasOwnProperty",
    "call",
    "_exportNames",
    "exports",
    "defineProperty",
    "enumerable",
    "get",
    "_getContrastingColor",
    "RGB_MAX",
    "HUE_MAX",
    "SV_MAX",
    "rgbaToHsva",
    "_ref",
    "r",
    "g",
    "b",
    "a",
    "max",
    "Math",
    "delta",
    "min",
    "hh",
    "h",
    "s",
    "v",
    "hsvaToHslString",
    "hsva",
    "_hsvaToHsla",
    "hsvaToHsla",
    "l",
    "concat",
    "round",
    "hsvaToHsvString",
    "_ref2",
    "hsvaToHsvaString",
    "_ref3",
    "hsvaToHslaString",
    "_hsvaToHsla2",
    "hslStringToHsla",
    "str",
    "_map",
    "match",
    "map",
    "Number",
    "_map2",
    "_slicedToArray2",
    "hslaStringToHsva",
    "hslString",
    "matcher",
    "exec",
    "hslaToHsva",
    "parseHue",
    "undefined",
    "hslStringToHsva",
    "_ref4",
    "_ref5",
    "hsvaStringToHsva",
    "hsvString",
    "angleUnits",
    "grad",
    "turn",
    "rad",
    "PI",
    "value",
    "unit",
    "arguments",
    "length",
    "hsvStringToHsva",
    "rgbaStringToHsva",
    "rgbaString",
    "rgbStringToHsva",
    "rgbaToHex",
    "_ref6",
    "bin",
    "Array",
    "join",
    "toString",
    "rgbaToHexa",
    "_ref7",
    "alpha",
    "slice",
    "hexToHsva",
    "hex",
    "hexToRgba",
    "htemp",
    "replace",
    "test",
    "charAt",
    "reg",
    "RegExp",
    "_map3",
    "parseInt",
    "_map4",
    "_map4$",
    "hsvaToRgba",
    "_ref8",
    "_h",
    "_s",
    "_v",
    "hi",
    "floor",
    "f",
    "_p",
    "_q",
    "_t",
    "rgba",
    "_objectSpread2",
    "hsvaToRgbString",
    "_hsvaToRgba",
    "hsvaToRgbaString",
    "_hsvaToRgba2",
    "rgbaToRgb",
    "_ref9",
    "hslaToHsl",
    "_ref10",
    "hsvaToHex",
    "hsvaToHexa",
    "hsvaToHsv",
    "_ref11",
    "color",
    "rgb",
    "hsl",
    "hsv",
    "hsla",
    "hexa",
    "validHex"
  ],
  "sources": [
    "../src/index.ts"
  ],
  "sourcesContent": [
    "import { validHex } from './utils';\n\nexport * from './utils';\nexport * from './getContrastingColor';\n\nconst RGB_MAX = 255;\nconst HUE_MAX = 360;\nconst SV_MAX = 100;\n\nexport type ObjectColor = RgbColor | HslColor | HsvColor | RgbaColor | HslaColor | HsvaColor;\nexport type ColorResult = {\n  rgb: RgbColor;\n  hsl: HslColor;\n  hsv: HsvColor;\n  rgba: RgbaColor;\n  hsla: HslaColor;\n  hsva: HsvaColor;\n  hex: string;\n  hexa: string;\n};\n\nexport interface HsvColor {\n  h: number;\n  s: number;\n  v: number;\n}\n\nexport interface HsvaColor extends HsvColor {\n  a: number;\n}\n\nexport interface RgbColor {\n  r: number;\n  g: number;\n  b: number;\n}\nexport interface RgbaColor extends RgbColor {\n  a: number;\n}\n\n/**\n * ```js\n * rgbaToHsva({ r: 255, g: 255, b: 255, a: 1 }) //=> { h: 0, s: 0, v: 100, a: 1 }\n * ```\n */\nexport const rgbaToHsva = ({ r, g, b, a }: RgbaColor): HsvaColor => {\n  const max = Math.max(r, g, b);\n  const delta = max - Math.min(r, g, b);\n\n  // prettier-ignore\n  const hh = delta\n    ? max === r\n      ? (g - b) / delta\n      : max === g\n        ? 2 + (b - r) / delta\n        : 4 + (r - g) / delta\n    : 0;\n\n  return {\n    h: 60 * (hh < 0 ? hh + 6 : hh),\n    s: max ? (delta / max) * SV_MAX : 0,\n    v: (max / RGB_MAX) * SV_MAX,\n    a,\n  };\n};\n\nexport const hsvaToHslString = (hsva: HsvaColor): string => {\n  const { h, s, l } = hsvaToHsla(hsva);\n  // return `hsl(${h}, ${s}%, ${l}%)`;\n  return `hsl(${h}, ${Math.round(s)}%, ${Math.round(l)}%)`;\n};\n\nexport const hsvaToHsvString = ({ h, s, v }: HsvaColor): string => {\n  return `hsv(${h}, ${s}%, ${v}%)`;\n};\n\nexport const hsvaToHsvaString = ({ h, s, v, a }: HsvaColor): string => {\n  return `hsva(${h}, ${s}%, ${v}%, ${a})`;\n};\n\nexport const hsvaToHslaString = (hsva: HsvaColor): string => {\n  const { h, s, l, a } = hsvaToHsla(hsva);\n  return `hsla(${h}, ${s}%, ${l}%, ${a})`;\n};\n\nexport const hslStringToHsla = (str: string): HslaColor => {\n  const [h, s, l, a] = (str.match(/\\d+/g) || []).map(Number);\n  return { h, s, l, a };\n};\n\nexport const hslaStringToHsva = (hslString: string): HsvaColor => {\n  const matcher =\n    /hsla?\\(?\\s*(-?\\d*\\.?\\d+)(deg|rad|grad|turn)?[,\\s]+(-?\\d*\\.?\\d+)%?[,\\s]+(-?\\d*\\.?\\d+)%?,?\\s*[/\\s]*(-?\\d*\\.?\\d+)?(%)?\\s*\\)?/i;\n  const match = matcher.exec(hslString);\n\n  if (!match) return { h: 0, s: 0, v: 0, a: 1 };\n\n  return hslaToHsva({\n    h: parseHue(match[1], match[2]),\n    s: Number(match[3]),\n    l: Number(match[4]),\n    a: match[5] === undefined ? 1 : Number(match[5]) / (match[6] ? 100 : 1),\n  });\n};\n\nexport const hslStringToHsva = hslaStringToHsva;\n\nexport const hslaToHsva = ({ h, s, l, a }: HslaColor): HsvaColor => {\n  s *= (l < 50 ? l : SV_MAX - l) / SV_MAX;\n\n  return {\n    h: h,\n    s: s > 0 ? ((2 * s) / (l + s)) * SV_MAX : 0,\n    v: l + s,\n    a,\n  };\n};\n\nexport interface HslColor {\n  h: number;\n  s: number;\n  l: number;\n}\nexport interface HslaColor extends HslColor {\n  a: number;\n}\nexport const hsvaToHsla = ({ h, s, v, a }: HsvaColor): HslaColor => {\n  const hh = ((200 - s) * v) / SV_MAX;\n\n  return {\n    h,\n    s: hh > 0 && hh < 200 ? ((s * v) / SV_MAX / (hh <= SV_MAX ? hh : 200 - hh)) * SV_MAX : 0,\n    l: hh / 2,\n    a,\n  };\n};\n\nexport const hsvaStringToHsva = (hsvString: string): HsvaColor => {\n  const matcher =\n    /hsva?\\(?\\s*(-?\\d*\\.?\\d+)(deg|rad|grad|turn)?[,\\s]+(-?\\d*\\.?\\d+)%?[,\\s]+(-?\\d*\\.?\\d+)%?,?\\s*[/\\s]*(-?\\d*\\.?\\d+)?(%)?\\s*\\)?/i;\n  const match = matcher.exec(hsvString);\n\n  if (!match) return { h: 0, s: 0, v: 0, a: 1 };\n\n  return {\n    h: parseHue(match[1], match[2]),\n    s: Number(match[3]),\n    v: Number(match[4]),\n    a: match[5] === undefined ? 1 : Number(match[5]) / (match[6] ? SV_MAX : 1),\n  };\n};\n\n/**\n * Valid CSS <angle> units.\n * https://developer.mozilla.org/en-US/docs/Web/CSS/angle\n */\nconst angleUnits: Record<string, number> = {\n  grad: HUE_MAX / 400,\n  turn: HUE_MAX,\n  rad: HUE_MAX / (Math.PI * 2),\n};\n\nexport const parseHue = (value: string, unit = 'deg'): number => {\n  return Number(value) * (angleUnits[unit] || 1);\n};\n\nexport const hsvStringToHsva = hsvaStringToHsva;\nexport const rgbaStringToHsva = (rgbaString: string): HsvaColor => {\n  const matcher =\n    /rgba?\\(?\\s*(-?\\d*\\.?\\d+)(%)?[,\\s]+(-?\\d*\\.?\\d+)(%)?[,\\s]+(-?\\d*\\.?\\d+)(%)?,?\\s*[/\\s]*(-?\\d*\\.?\\d+)?(%)?\\s*\\)?/i;\n  const match = matcher.exec(rgbaString);\n\n  if (!match) return { h: 0, s: 0, v: 0, a: 1 };\n\n  return rgbaToHsva({\n    r: Number(match[1]) / (match[2] ? SV_MAX / RGB_MAX : 1),\n    g: Number(match[3]) / (match[4] ? SV_MAX / RGB_MAX : 1),\n    b: Number(match[5]) / (match[6] ? SV_MAX / RGB_MAX : 1),\n    a: match[7] === undefined ? 1 : Number(match[7]) / (match[8] ? SV_MAX : 1),\n  });\n};\n\nexport const rgbStringToHsva = rgbaStringToHsva;\n\n/** Converts an RGBA color plus alpha transparency to hex */\nexport const rgbaToHex = ({ r, g, b }: RgbaColor): string => {\n  let bin = (r << 16) | (g << 8) | b;\n  return `#${((h) => new Array(7 - h.length).join('0') + h)(bin.toString(16))}`;\n};\n\nexport const rgbaToHexa = ({ r, g, b, a }: RgbaColor): string => {\n  const alpha = typeof a === 'number' && ((a * 255) | (1 << 8)).toString(16).slice(1);\n  return `${rgbaToHex({ r, g, b, a })}${alpha ? alpha : ''}`;\n};\n\nexport const hexToHsva = (hex: string): HsvaColor => rgbaToHsva(hexToRgba(hex));\nexport const hexToRgba = (hex: string): RgbaColor => {\n  const htemp = hex.replace('#', '');\n  if (/^#?/.test(hex) && htemp.length === 3) {\n    hex = `#${htemp.charAt(0)}${htemp.charAt(0)}${htemp.charAt(1)}${htemp.charAt(1)}${htemp.charAt(2)}${htemp.charAt(2)}`;\n  }\n  const reg = new RegExp(`[A-Za-z0-9]{2}`, 'g');\n  const [r, g, b = 0, a] = hex.match(reg)!.map((v) => parseInt(v, 16));\n  return {\n    r,\n    g,\n    b,\n    a: a ? a / RGB_MAX : 1,\n  };\n};\n\n/**\n * Converts HSVA to RGBA. Based on formula from https://en.wikipedia.org/wiki/HSL_and_HSV\n * @param color HSVA color as an array [0-360, 0-1, 0-1, 0-1]\n */\nexport const hsvaToRgba = ({ h, s, v, a }: HsvaColor): RgbaColor => {\n  let _h = h / 60,\n    _s = s / SV_MAX,\n    _v = v / SV_MAX,\n    hi = Math.floor(_h) % 6;\n\n  let f = _h - Math.floor(_h),\n    _p = RGB_MAX * _v * (1 - _s),\n    _q = RGB_MAX * _v * (1 - _s * f),\n    _t = RGB_MAX * _v * (1 - _s * (1 - f));\n  _v *= RGB_MAX;\n  const rgba = {} as RgbaColor;\n  switch (hi) {\n    case 0:\n      rgba.r = _v;\n      rgba.g = _t;\n      rgba.b = _p;\n      break;\n    case 1:\n      rgba.r = _q;\n      rgba.g = _v;\n      rgba.b = _p;\n      break;\n    case 2:\n      rgba.r = _p;\n      rgba.g = _v;\n      rgba.b = _t;\n      break;\n    case 3:\n      rgba.r = _p;\n      rgba.g = _q;\n      rgba.b = _v;\n      break;\n    case 4:\n      rgba.r = _t;\n      rgba.g = _p;\n      rgba.b = _v;\n      break;\n    case 5:\n      rgba.r = _v;\n      rgba.g = _p;\n      rgba.b = _q;\n      break;\n  }\n  rgba.r = Math.round(rgba.r);\n  rgba.g = Math.round(rgba.g);\n  rgba.b = Math.round(rgba.b);\n  return { ...rgba, a };\n};\n\nexport const hsvaToRgbString = (hsva: HsvaColor): string => {\n  const { r, g, b } = hsvaToRgba(hsva);\n  return `rgb(${r}, ${g}, ${b})`;\n};\n\nexport const hsvaToRgbaString = (hsva: HsvaColor): string => {\n  const { r, g, b, a } = hsvaToRgba(hsva);\n  return `rgba(${r}, ${g}, ${b}, ${a})`;\n};\n\nexport const rgbaToRgb = ({ r, g, b }: RgbaColor): RgbColor => ({ r, g, b });\nexport const hslaToHsl = ({ h, s, l }: HslaColor): HslColor => ({ h, s, l });\nexport const hsvaToHex = (hsva: HsvaColor): string => rgbaToHex(hsvaToRgba(hsva));\nexport const hsvaToHexa = (hsva: HsvaColor): string => rgbaToHexa(hsvaToRgba(hsva));\nexport const hsvaToHsv = ({ h, s, v }: HsvaColor): HsvColor => ({ h, s, v });\n\nexport const color = (str: string | HsvaColor): ColorResult => {\n  let rgb!: RgbColor;\n  let hsl!: HslColor;\n  let hsv!: HsvColor;\n  let rgba!: RgbaColor;\n  let hsla!: HslaColor;\n  let hsva!: HsvaColor;\n  let hex!: string;\n  let hexa!: string;\n  if (typeof str === 'string' && validHex(str)) {\n    hsva = hexToHsva(str);\n    hex = str;\n  } else if (typeof str !== 'string') {\n    hsva = str;\n  }\n  if (hsva) {\n    hsv = hsvaToHsv(hsva);\n    hsla = hsvaToHsla(hsva);\n    rgba = hsvaToRgba(hsva);\n    hexa = rgbaToHexa(rgba);\n    hex = hsvaToHex(hsva);\n    hsl = hslaToHsl(hsla);\n    rgb = rgbaToRgb(rgba);\n  }\n  return { rgb, hsl, hsv, rgba, hsla, hsva, hex, hexa };\n};\n"
  ],
  "mappings": "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"
}